name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            packages/fe/**
            packages/server/**

      - name: Check FE changes
        if: contains(steps.changed-files.outputs.all_changed_files, 'packages/fe/')
        run: |
          echo "FE_CHANGED=true" >> $GITHUB_ENV

      - name: Check Server changes
        if: contains(steps.changed-files.outputs.all_changed_files, 'packages/server/')
        run: |
          echo "SERVER_CHANGED=true" >> $GITHUB_ENV

      - name: Deploy
        if: env.FE_CHANGED == 'true' || env.SERVER_CHANGED == 'true'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" 
            nvm -v
            nvm use 20
            node -v
            cd ${{ secrets.PATH }}
            ${{ secrets.CLASH }}
            export https_proxy='127.0.0.1:7890'
            git pull
            pnpm i
            
            # Only build and deploy changed packages
            if [ "${{ env.FE_CHANGED }}" = "true" ]; then
              echo "Building and deploying frontend..."
              cd packages/fe
              pnpm build
              docker stop ${{ secrets.DOCKER_IMG_FE }}
              docker start ${{ secrets.DOCKER_IMG_FE }}
              docker exec -itd ${{ secrets.DOCKER_IMG_FE }} /bin/sh -c "cd /app && pnpm start"
            fi
            
            # TODO: deploy server
            # if [ "${{ env.SERVER_CHANGED }}" = "true" ]; then
            #   echo "Building and deploying server..."
            #   cd packages/server
            #   pnpm build
            #   docker stop ${{ secrets.DOCKER_IMG_SERVER }}
            #   docker start ${{ secrets.DOCKER_IMG_SERVER }}
            #   docker exec -itd ${{ secrets.DOCKER_IMG_SERVER }} /bin/sh -c "cd /app && pnpm start"
            # fi
            
            kill $(cat pid.txt) || true
            rm pid.txt
          
